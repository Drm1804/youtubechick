export type PhKeys =
  | 'greeting'
  | 'youtubeLinkValidationError'
  | 'startDownloadLiveMessage'
  | 'errorDownloadLiveMessage'
  | 'successDownloadLiveMessage'
  | 'updateDownloadLiveMessage'
  | 'updateTlgProgress'
  | 'messageWithDescriptionAudio';

type Func = (...args: Array<string | number>) => string;

const store: Record<PhKeys, Func | string> = {
  greeting: (name: string) =>
    `–ü—Ä–∏–≤–µ—Ç ${name}, –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ, –∞ –Ω–∞—à –∞–≥–µ–Ω—Ç –ø—Ä–∏—à–ª–µ—Ç —Ç–µ–±–µ –∞—É–¥–∏–æ –≤–µ—Ä—Å–∏—é`,
  youtubeLinkValidationError: (name: string) =>
    `–ß—Ç–æ –∂–µ —Ç—ã –¥–µ–ª–∞–µ—à—å ${name}?\n–Ø –Ω–µ —É–∑–Ω–∞—é —Ç—É—Ç —Å—Å—ã–ª–∫—É –Ω–∞ Youtube –≤–∏–¥–µ–æ`,
  startDownloadLiveMessage: '–ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É',
  successDownloadLiveMessage: '–ì–æ—Ç–æ–≤–æ, –Ω–∞—à –∞–≥–µ–Ω—Ç —É–∂–µ –≤—Å–µ –ø—Ä–∏—Å–ª–∞–ª üòé',
  errorDownloadLiveMessage: '–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å...',
  updateDownloadLiveMessage: (t: string) =>
    `–Ø –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, —Å–µ–π—á–∞—Å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç: \n\n${t}`,
  updateTlgProgress: (t: string) =>
    `[telegram] –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞: ${t}%`,
  messageWithDescriptionAudio: (filename: string, url: string) =>
    `${filename} \n\n –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ: ${url}`,
};

export function getText(key: PhKeys, args?: Array<string | number>): string {
  if (typeof store[key] === 'function') {
    return store[key](...args);
  }
  return store[key];
}
